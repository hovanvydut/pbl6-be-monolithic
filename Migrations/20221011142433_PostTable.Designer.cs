// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Monolithic.Models.Context;

#nullable disable

namespace monolithic.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221011142433_PostTable")]
    partial class PostTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Monolithic.Models.Entities.AddressDistrictEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AddressProvinceEntityId")
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AddressProvinceEntityId");

                    b.ToTable("address_district");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.AddressProvinceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("address_province");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.AddressWardEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AddressDistrictEntityId")
                        .HasColumnType("int")
                        .HasColumnName("district_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AddressDistrictEntityId");

                    b.ToTable("address_ward");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("display_name");

                    b.Property<string>("Slug")
                        .HasColumnType("longtext")
                        .HasColumnName("slug");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.PostEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("longtext")
                        .HasColumnName("address");

                    b.Property<int>("AddressWardEntityId")
                        .HasColumnType("int");

                    b.Property<float>("Area")
                        .HasColumnType("float")
                        .HasColumnName("area");

                    b.Property<int>("CategoryEntityId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int>("LimitTenant")
                        .HasColumnType("int")
                        .HasColumnName("limit_tenant");

                    b.Property<int>("NumView")
                        .HasColumnType("int")
                        .HasColumnName("num_view");

                    b.Property<float>("PrePaidPrice")
                        .HasColumnType("float")
                        .HasColumnName("pre_paid_price");

                    b.Property<float>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<string>("Slug")
                        .HasColumnType("longtext")
                        .HasColumnName("slug");

                    b.Property<int>("TenantTypeEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AddressWardEntityId");

                    b.HasIndex("CategoryEntityId");

                    b.HasIndex("TenantTypeEntityId");

                    b.ToTable("post");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.TenantTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("display_name");

                    b.Property<string>("Slug")
                        .HasColumnType("longtext")
                        .HasColumnName("slug");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("tenant_type");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.AddressDistrictEntity", b =>
                {
                    b.HasOne("Monolithic.Models.Entities.AddressProvinceEntity", "AddressProvinceEntity")
                        .WithMany("AddressDistrictEntities")
                        .HasForeignKey("AddressProvinceEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressProvinceEntity");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.AddressWardEntity", b =>
                {
                    b.HasOne("Monolithic.Models.Entities.AddressDistrictEntity", "AddressDistrictEntity")
                        .WithMany("AddressWardEntities")
                        .HasForeignKey("AddressDistrictEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressDistrictEntity");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.PostEntity", b =>
                {
                    b.HasOne("Monolithic.Models.Entities.AddressWardEntity", "AddressWardEntity")
                        .WithMany()
                        .HasForeignKey("AddressWardEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monolithic.Models.Entities.CategoryEntity", "CategoryEntity")
                        .WithMany("PostEntities")
                        .HasForeignKey("CategoryEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monolithic.Models.Entities.TenantTypeEntity", "TenantTypeEntity")
                        .WithMany("PostEntities")
                        .HasForeignKey("TenantTypeEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressWardEntity");

                    b.Navigation("CategoryEntity");

                    b.Navigation("TenantTypeEntity");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.AddressDistrictEntity", b =>
                {
                    b.Navigation("AddressWardEntities");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.AddressProvinceEntity", b =>
                {
                    b.Navigation("AddressDistrictEntities");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.CategoryEntity", b =>
                {
                    b.Navigation("PostEntities");
                });

            modelBuilder.Entity("Monolithic.Models.Entities.TenantTypeEntity", b =>
                {
                    b.Navigation("PostEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
